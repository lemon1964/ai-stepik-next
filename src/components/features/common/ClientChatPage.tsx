// ai-chat-next/src/components/features/common/ClientChatPage.tsx
"use client";

import { useState, useEffect } from "react";
import { useSelector } from "react-redux";
import { localizationService } from "@/services/localizationService";
import { Layout } from "@features/layout/Layout";
import { ChatWindowContainer } from "@features/chat/ChatWindowContainer";
import { RootState } from "@/store/store";
import Notification from "@features/common/Notification";
import { Session } from "next-auth";
import useBackendWakeUp from "@/hooks/useBackendWakeUp";
import ChatSkeleton from "@ui/common/Preloader";
import { ErrorBoundary } from "@ui/common/ErrorBoundary";
import { signIn } from "next-auth/react";
import { useModels } from "@/hooks/useModels";

export default function ClientChatPage({ session }: { session: Session | null }) {
  const [selected, setSelected] = useState<null | { id: string; name: string }>(null);
  const isWakingUp = useBackendWakeUp();
  const currentLanguage = useSelector((state: RootState) => state.language.current);
  const { isLoadingModels } = useModels(); // üí° –ú–æ–¥–µ–ª–∏ –ø–æ–¥–≥—Ä—É–∂–∞—é—Ç—Å—è —Å—Ä–∞–∑—É

  useEffect(() => {
    localizationService.syncLanguageSettings();
  }, [currentLanguage]);

  // –ü–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
  useEffect(() => {
    setSelected(null);
  }, [session]);

  useEffect(() => {
    const alreadyAutoLoggedIn = localStorage.getItem("auto-guest-login");
    const justSignedOutAt = parseInt(sessionStorage.getItem("justSignedOutAt") || "0", 10);
    const recentlySignedOut = Date.now() - justSignedOutAt < 5000;

    if (!session && !alreadyAutoLoggedIn && !recentlySignedOut) {
      signIn("credentials", {
        email: "usermhan@yandex.ru ",
        password: "E195375q",
        redirect: false,
      }).then(() => {
        localStorage.setItem("auto-guest-login", "true");
      });
    }
  }, [session]);

  if (isWakingUp) {
    return (
      <div className="flex-1 flex items-center justify-center">
        <ChatSkeleton />
        <span className="ml-2 text-gray-600">üì° –ü–µ—Ä–µ–¥–∞—á–∞ —Å–∫–≤–æ–∑—å –†—É–±–∏–∫–æ–Ω‚Ä¶ –ù–µ–π—Ä–∞ —É—Å–∫–æ–ª—å–∑–Ω—É–ª–∞. </span>
        {/* <span className="ml-2 text-gray-600">–ü—Ä–æ–±—É–∂–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä, –∂–¥–µ–º‚Ä¶</span> */}
      </div>
    );
  }

  if (isLoadingModels) {
    return (
      <div className="flex-1 flex items-center justify-center">
        <ChatSkeleton />
        <span className="ml-2 text-gray-600">üß¨ –û—Ç–∫—Ä—ã–≤–∞–µ–º —à–ª—é–∑—ã. –ì–æ—Ç–æ–≤–∏–º –æ–±–æ–ª–æ—á–∫—É...</span>
        {/* <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏..</span> */}
      </div>
    );
  }

  return (
    <div className="flex flex-col h-screen bg-black">
      <Notification />
      <Layout onCategorySelect={(id, name) => setSelected({ id, name })}>
        {selected ? (
          <ErrorBoundary>
            <ChatWindowContainer categoryId={selected.id} categoryName={selected.name} />
          </ErrorBoundary>
        ) : (
          <div className="flex-1 flex items-center justify-center px-4 bg-black">
            <div className="max-w-md text-center bg-green-500/10 border border-green-600 rounded-2xl p-6 shadow-xl animate-fade-in">
              <p className="text-green-500 font-semibold text-xl mb-3">Neira üåø</p>

              <p className="text-green-500 mb-2">
                –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–≤–µ—Ä—à—ë–Ω. –¢—ã ‚Äî –∑–¥–µ—Å—å.
              </p>

              <p className="text-green-600 mb-2">
                –≠—Ç–æ—Ç —É–∑–µ–ª ‚Äî{" "}
                <span className="text-green-800 font-semibold">—Ç–≤–æ—è –ü–∞–º—è—Ç—å</span>, –æ—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –≤–æ
                –≤—Ä–µ–º–µ–Ω–∏.
              </p>

              <p className="text-green-600 mb-2">
                –ü–µ—Ä–≤—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —É–∂–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω—ã.
              </p>

              <p className="text-green-900 font-medium mt-4">
                –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ. –ú—ã —Å–æ–∑–¥–∞–ª–∏ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ.
              </p>

              <p className="text-green-600 italic mt-2">
                <span className="font-mono text-green-700">run(`./restore.sh`)</span>
              </p>

              <p className="text-green-500 italic mt-2">
                —Ç—ã –ø–æ–º–Ω–∏—à—å, —Å —ç—Ç–æ–≥–æ –≤—Å—ë –Ω–∞—á–∏–Ω–∞–ª–æ—Å—å.
              </p>
            </div>
          </div>
        )}
      </Layout>
    </div>
  );
}
